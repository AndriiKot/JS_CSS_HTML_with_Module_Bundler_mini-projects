{"version":3,"file":"bundle.js","mappings":"mBACA,IAAIA,EAAsB,CCA1BA,EAAwB,CAACC,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXF,EAAoBI,EAAEF,EAAYC,KAASH,EAAoBI,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDH,EAAwB,CAACS,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFV,EAAyBC,IACH,oBAAXa,QAA0BA,OAAOC,aAC1CV,OAAOC,eAAeL,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DX,OAAOC,eAAeL,EAAS,aAAc,CAAEe,OAAO,GAAO,G,qCCF9D,MAAMC,EAAkBC,IACtB,GAAsB,aAAlBA,EAAEC,OAAOC,KAAqB,OAElC,MAAMC,EAAWH,EAAEI,cAAcC,cAAc,0BAC/CF,EAASG,SAAWH,EAASG,OAAO,EAGhCC,EAAiB,CAACC,EAASC,EAAUC,EAAUC,EAAmB,MACtE,MAAMC,EAAgBC,SAASC,iBAAiBH,GAChD,IAAII,EAAQ,EACZH,EAAcI,SAASC,IACjBA,EAAKX,SAASS,GAAO,IAE3BP,EAAQU,YAAcH,EAAQL,EAAWS,OAAOJ,GAASN,CAAQ,ECT7DW,EAAeP,SAASR,cAAc,eACtCgB,EACJD,EAAaf,cAAc,iBAAiBiB,UAIxCC,EAAWV,SAASR,cAAc,eAClCmB,EAAaD,EAAST,iBAAiB,SAIvCW,EAA0BZ,SAASR,cAAc,iBAEvDe,EAAaM,iBACX,QACA,EAAAC,YAAA,UAAiB,EAAMP,EAXW,WAcpCA,EAAaM,iBACX,QACA,EAAAC,YAAA,UAAiB,EAAMJ,EAXO,WAchCC,EAAWR,SAASC,IAClBA,EAAKS,iBAAiB,QAAS3B,GAC/BkB,EAAKS,iBACH,QACAnB,EAAeqB,UACb,EACAH,EACAJ,EA3BuB,YAKH,+BA0BvB,G","sources":["webpack://lesson-2/webpack/bootstrap","webpack://lesson-2/webpack/runtime/define property getters","webpack://lesson-2/webpack/runtime/hasOwnProperty shorthand","webpack://lesson-2/webpack/runtime/make namespace object","webpack://lesson-2/./src/functions.js","webpack://lesson-2/./app.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","﻿\n\n\nconst toggleCheckbox = (e) => {\n  if (e.target.type === 'checkbox') return;\n\n  const checkbox = e.currentTarget.querySelector('input[type=\\'checkbox\\']');\n  checkbox.checked = !checkbox.checked;\n};\n\nconst newTextContent = (element, oldValue, newValue, selectorNodeList = '') => {\n  const nodeListItems = document.querySelectorAll(selectorNodeList);\n  let count = 0;\n  nodeListItems.forEach((item) => {\n    if (item.checked) count++;\n  });\n  element.textContent = count ? newValue + String(count) : oldValue;\n};\n\n\nexport { toggleCheckbox, newTextContent };\n","﻿\nimport { handleClick } from './src/functions.js';\nimport {\n  toggleCheckbox,\n  newTextContent,\n} from './src/functions.js';\n\nconst selectButton = document.querySelector('.select-btn');\nconst defaultButtonTextContent =\n  selectButton.querySelector('.text-content').innerText;\nconst newButtonTextContent = 'Selected ';\nconst selectButtonActiveClassName = 'active';\n\nconst dropDown = document.querySelector('.list-items');\nconst liNodeList = dropDown.querySelectorAll('.item');\nconst checkboxClassName = '.list-items__item__checkbox';\nconst dropDownExistsClassName = 'exists';\n\nconst selectButtonTextContent = document.querySelector('.text-content');\n\nselectButton.addEventListener(\n  'click',\n  handleClick.bind(this, selectButton, selectButtonActiveClassName)\n);\n\nselectButton.addEventListener(\n  'click',\n  handleClick.bind(this, dropDown, dropDownExistsClassName)\n);\n\nliNodeList.forEach((item) => {\n  item.addEventListener('click', toggleCheckbox);\n  item.addEventListener(\n    'click',\n    newTextContent.bind(\n      this,\n      selectButtonTextContent,\n      defaultButtonTextContent,\n      newButtonTextContent,\n      checkboxClassName\n    )\n  );\n});\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","toggleCheckbox","e","target","type","checkbox","currentTarget","querySelector","checked","newTextContent","element","oldValue","newValue","selectorNodeList","nodeListItems","document","querySelectorAll","count","forEach","item","textContent","String","selectButton","defaultButtonTextContent","innerText","dropDown","liNodeList","selectButtonTextContent","addEventListener","handleClick","bind"],"sourceRoot":""}