{"version":3,"file":"bundle.js","mappings":"mBACA,MAAMA,EAAc,CAACC,EAASC,KAC5BD,EAAQE,UAAUC,OAAOF,EAAU,ECF9BG,EAAkBC,IACvB,GAAsB,aAAlBA,EAAEC,OAAOC,KAAqB,OAClC,MAAMC,EAAWH,EAAEI,cAAcC,cAAc,0BAC/CF,EAASG,SAAWH,EAASG,OAAO,ECChCC,EAAeC,SAASH,cAAc,eACtCI,EACJF,EAAaF,cAAc,iBAAiBK,UAIxCC,EAAWH,SAASH,cAAc,eAClCO,EAAaD,EAASE,iBAAiB,SAGvCC,EAA0BN,SAASH,cAAc,iBAEvDE,EAAaQ,iBAAiB,SAAS,KACrCrB,EAAYa,EATsB,SASoB,IAGxDA,EAAaQ,iBAAiB,SAAS,KACrCrB,EAAYiB,EARkB,SAQgB,IAGhDC,EAAWI,SAASC,IAClBA,EAAKF,iBAAiB,QAAShB,GAC/BkB,EAAKF,iBAAiB,SAAS,KCzBV,EAACpB,EAASuB,EAAUC,EAAUC,EAAmB,MACtE,MAAMC,EAAgBb,SAASK,iBAAiBO,GAChD,IAAIE,EAAQ,EACZD,EAAcL,SAASC,IACjBA,EAAKX,SAASgB,GAAO,IAE3B3B,EAAQ4B,YAAcD,EAAQH,EAAWK,OAAOF,GAASJ,CAAQ,EDoB/DO,CACEX,EACAL,EAtBuB,YAKH,8BAoBrB,GACD,G","sources":["webpack://lesson-2/./src/handleClick.js","webpack://lesson-2/./src/toggleCheckbox.js","webpack://lesson-2/./app.js","webpack://lesson-2/./src/newTextContent.js"],"sourcesContent":["﻿\r\nconst handleClick = (element, className) => {\r\n  element.classList.toggle(className);\r\n};\r\n\r\nexport { handleClick };","﻿const toggleCheckbox = (e) => {\r\n  if (e.target.type === \"checkbox\") return;\r\n  const checkbox = e.currentTarget.querySelector(\"input[type='checkbox']\");\r\n  checkbox.checked = !checkbox.checked;\r\n};\r\n\r\nexport { toggleCheckbox };\r\n","﻿import { handleClick } from \"./src/handleClick.js\";\nimport { toggleCheckbox } from \"./src/toggleCheckbox.js\";\nimport { newTextContent } from \"./src/newTextContent.js\";\n\nconst selectButton = document.querySelector(\".select-btn\");\nconst defaultButtonTextContent =\n  selectButton.querySelector(\".text-content\").innerText;\nconst newButtonTextContent = \"Selected \";\nconst selectButtonActiveClassName = \"active\";\n\nconst dropDown = document.querySelector(\".list-items\");\nconst liNodeList = dropDown.querySelectorAll(\".item\");\nconst checkboxClassName = \".list-items__item__checkbox\";\nconst dropDownExistsClassName = \"exists\";\nconst selectButtonTextContent = document.querySelector(\".text-content\");\n\nselectButton.addEventListener(\"click\", () => {\n  handleClick(selectButton, selectButtonActiveClassName);\n});\n\nselectButton.addEventListener(\"click\", () => {\n  handleClick(dropDown, dropDownExistsClassName);\n});\n\nliNodeList.forEach((item) => {\n  item.addEventListener(\"click\", toggleCheckbox);\n  item.addEventListener(\"click\", () => {\n    newTextContent(\n      selectButtonTextContent,\n      defaultButtonTextContent,\n      newButtonTextContent,\n      checkboxClassName\n    );\n  });\n});\n","﻿\nconst newTextContent = (element, oldValue, newValue, selectorNodeList = '') => {\n  const nodeListItems = document.querySelectorAll(selectorNodeList);\n  let count = 0;\n  nodeListItems.forEach((item) => {\n    if (item.checked) count++;\n  });\n  element.textContent = count ? newValue + String(count) : oldValue;\n};\n\n\nexport { newTextContent };\n"],"names":["handleClick","element","className","classList","toggle","toggleCheckbox","e","target","type","checkbox","currentTarget","querySelector","checked","selectButton","document","defaultButtonTextContent","innerText","dropDown","liNodeList","querySelectorAll","selectButtonTextContent","addEventListener","forEach","item","oldValue","newValue","selectorNodeList","nodeListItems","count","textContent","String","newTextContent"],"sourceRoot":""}