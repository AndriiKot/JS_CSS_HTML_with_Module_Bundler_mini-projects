{"version":3,"file":"bundle.js","mappings":"mBACA,MAIA,EAJoB,CAACA,EAASC,KAC5BD,EAAQE,UAAUC,OAAOF,EAAU,ECMrC,EAPwBG,IACtB,GAAsB,aAAlBA,EAAEC,OAAOC,KAAqB,OAElC,MAAMC,EAAWH,EAAEI,cAAcC,cAAc,0BAC/CF,EAASG,SAAWH,EAASG,OAAO,ECKtC,EATuB,CAACV,EAASW,EAAUC,EAAUC,EAAmB,MACtE,MAAMC,EAAgBC,SAASC,iBAAiBH,GAChD,IAAII,EAAQ,EACZH,EAAcI,SAASC,IACjBA,EAAKT,SAASO,GAAO,IAE3BjB,EAAQoB,YAAcH,EAAQL,EAAWS,OAAOJ,GAASN,CAAQ,ECLnE,EAF0B,IAAIW,IAAI,CAAC,MAAO,KAAM,SCEhD,EAFyB,IAAIA,IAAI,CAAC,OAAQ,QCG1CC,QAAQC,IAAI,EAAgB,GAE5B,MAEA,EAF0B,IAAIF,IAAI,ICClCC,QAAQC,IAAI,GAEZ,MAAMC,EAAeV,SAASN,cAAc,eACtCiB,EACJD,EAAahB,cAAc,iBAAiBkB,UAIxCC,EAAWb,SAASN,cAAc,eAClCoB,EAAaD,EAASZ,iBAAiB,SAIvCc,EAA0Bf,SAASN,cAAc,iBAEvDgB,EAAaM,iBACX,QACA,EAAYC,UAAK,EAAMP,EAXW,WAcpCA,EAAaM,iBACX,QACA,EAAYC,UAAK,EAAMJ,EAXO,WAchCC,EAAWX,SAAQ,CAACC,EAAMc,EAAQC,EAAWC,EAAa,aACxDhB,EAAKY,iBAAiB,QAAS,GAC/BZ,EAAKY,iBACH,QACA,EAAeC,UACb,EACAF,EACAJ,EA3BuB,YAKH,gCA2BxBH,QAAQC,IAAIL,EAAKiB,QAAQD,GAAY,G","sources":["webpack://lesson-2/./src/handleClick.js","webpack://lesson-2/./src/toggleCheckbox.js","webpack://lesson-2/./src/newTextContent.js","webpack://lesson-2/./src/setArrayFrontend.js","webpack://lesson-2/./src/setArrayBackend.js","webpack://lesson-2/./src/setArrayFullStack.js","webpack://lesson-2/./app.js"],"sourcesContent":["﻿\nconst handleClick = (element, className) => {\n  element.classList.toggle(className);\n};\n\nexport default handleClick;\n","﻿\nconst toggleCheckbox = (e) => {\n  if (e.target.type === 'checkbox') return;\n\n  const checkbox = e.currentTarget.querySelector('input[type=\\'checkbox\\']');\n  checkbox.checked = !checkbox.checked;\n};\n\nexport default toggleCheckbox;\n","﻿\nconst newTextContent = (element, oldValue, newValue, selectorNodeList = '') => {\n  const nodeListItems = document.querySelectorAll(selectorNodeList);\n  let count = 0;\n  nodeListItems.forEach((item) => {\n    if (item.checked) count++;\n  });\n  element.textContent = count ? newValue + String(count) : oldValue;\n};\n\nexport default newTextContent;\n","﻿const setArrayFrontend = new Set(['css', 'js', 'html']);\n\nexport default setArrayFrontend;\n\n\n","﻿const setArrayBackend = new Set(['ruby', 'sql']);\n\nexport default setArrayBackend;\n","﻿import setArrayFrontend from \"./setArrayFrontend\";\nimport setArrayBackend from \"./setArrayBackend\"\n\nconsole.log(setArrayBackend,setArrayFrontend)\n\nconst setArrayFullStack = new Set([]);\n\nexport default setArrayFullStack;\n","﻿\nimport handleClick from './src/handleClick.js';\nimport toggleCheckbox from './src/toggleCheckbox.js';\nimport newTextContent from './src/newTextContent.js';\nimport setArrayFullStack from './src/setArrayFullStack.js';\n\nconsole.log(setArrayFullStack);\n\nconst selectButton = document.querySelector('.select-btn');\nconst defaultButtonTextContent =\n  selectButton.querySelector('.text-content').innerText;\nconst newButtonTextContent = 'Selected ';\nconst selectButtonActiveClassName = 'active';\n\nconst dropDown = document.querySelector('.list-items');\nconst liNodeList = dropDown.querySelectorAll('.item');\nconst checkboxClassName = '.list-items__item__checkbox';\nconst dropDownExistsClassName = 'exists';\n\nconst selectButtonTextContent = document.querySelector('.text-content');\n\nselectButton.addEventListener(\n  'click',\n  handleClick.bind(this, selectButton, selectButtonActiveClassName)\n);\n\nselectButton.addEventListener(\n  'click',\n  handleClick.bind(this, dropDown, dropDownExistsClassName)\n);\n\nliNodeList.forEach((item, _index, _nodeList, datasetKey = 'content') => {\n  item.addEventListener('click', toggleCheckbox);\n  item.addEventListener(\n    'click',\n    newTextContent.bind(\n      this,\n      selectButtonTextContent,\n      defaultButtonTextContent,\n      newButtonTextContent,\n      checkboxClassName\n    )\n  );\n  console.log(item.dataset[datasetKey]);\n});\n"],"names":["element","className","classList","toggle","e","target","type","checkbox","currentTarget","querySelector","checked","oldValue","newValue","selectorNodeList","nodeListItems","document","querySelectorAll","count","forEach","item","textContent","String","Set","console","log","selectButton","defaultButtonTextContent","innerText","dropDown","liNodeList","selectButtonTextContent","addEventListener","bind","_index","_nodeList","datasetKey","dataset"],"sourceRoot":""}