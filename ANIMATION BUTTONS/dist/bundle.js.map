{"version":3,"file":"bundle.js","mappings":"mBAEA,MCIA,EAJoBA,GACQ,mBAAZA,ECIhB,EAJ8C,SAACA,GAC3C,OADsDC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAGG,GAC7CJ,IAAYA,KAAcA,CAC1C,ECEMK,EAAeC,SAASC,cAAc,UAEtCC,EHPgB,WAAsB,IAArBC,EAAGR,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAAGS,EAAGT,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EACpC,OAAOU,KAAKC,MAAOD,KAAKE,SAAWH,EAAOD,EAC5C,EGK2CK,UAAK,EAAM,EAAG,KAInDC,EAA2BC,MAHF,GAGgCC,KAFrB,GAMpCC,ECbc,WAIf,IAFHlB,EAAOC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,QAAGE,EACVgB,EAAGlB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAGmB,EAEN,MAAO,IAAI,IAAIJ,MAJKf,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,IAIqBoB,KAAI,IACvCF,EAAIA,EAAInB,KAEnB,EDKoDc,UAClD,EAR6B,EAU7BN,GAGIc,GErBcC,CAACvB,EAASwB,KAC5BxB,EAAQyB,UAAUC,OAAOF,EAAU,GFoBCV,UACpC,EACAT,EAjB2B,eAqBvBsB,EAAqC,SACzC3B,GAEG,IADH4B,EAAK3B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAGc,EAER,OAAOf,EG3B2B,WAAiB,IAAhB6B,EAAM5B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAK5C,OAJA4B,ECLmB,WAAiB,IAAhBA,EAAM5B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAG7B,OAFA4B,EAASA,EAAOC,QAAQ,QAAS,IACjCD,EAASA,EAAOC,QAAQ,KAAM,KACvBD,CACT,CDCWE,CAAaF,GELiB,WAEvC,OAFmD5B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,IACrBoB,KAAKW,IAAQA,GAEhD,CFGuBC,CGNY,WAEjC,OAFwChC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,IAChBiC,MAAM,IAEnC,CHIIC,CAA2BN,GAG/B,CHqBmBO,CAA4BpC,GAAW4B,CAC1D,EA2DAvB,EAAagC,iBAAiB,QAASf,GACxBgB,aAtDfC,iBAGE,IAFAC,EAAgBvC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG0B,EACnBc,EAAUxC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAGiB,EAEX,MAAMlB,EAAUM,SAASC,cAAc,UACjCmC,EAAuB1C,EAAQ2C,MAAMC,aACrCC,EAA4BL,EAAiBE,GAC7CI,EAA4BL,IAXtC,IAAeM,EAYXC,QAAQC,IAAK,sBAAqBP,KAClCM,QAAQC,IAAIJ,GACZG,QAAQC,IAAIH,SAdDC,EAkDC,GAjDP,IAAIG,SAASC,GAAYC,WAAWD,EAASJ,MAkDlDC,QAAQC,IAAIjD,EAChB,GAMiD,I","sources":["webpack://animation-buttons/./src/random_integer_fn.js","webpack://animation-buttons/./src/createArray/isFunction.js","webpack://animation-buttons/./src/createArray/returnResultOfFunction.js","webpack://animation-buttons/./main.js","webpack://animation-buttons/./src/createArray/createArray.js","webpack://animation-buttons/./src/toggleHandleClick.js","webpack://animation-buttons/./src/convertStringToArrayInteger/convertStringToArrayInteger.js","webpack://animation-buttons/./src/convertStringToArrayInteger/filterString.js","webpack://animation-buttons/./src/convertStringToArrayInteger/convertArrayStringToArrayInteger.js","webpack://animation-buttons/./src/convertStringToArrayInteger/convertStringToArrayString.js"],"sourcesContent":["\"use strict\";\r\n\r\nconst randomInteger = (min = 1, max = 1) => {\r\n  return Math.floor((Math.random() * max) + min);\r\n}\r\n\r\nexport default randomInteger;","\"use strict\";\r\n\r\nconst isFunction = (element) => {\r\n  return typeof element === \"function\";\r\n};\r\n\r\nexport default isFunction ;\r\n","\"use strict\";\r\nimport isFunction from \"./isFunction\";\r\n\r\nconst returnResultOfFunctionOrReturnElement = (element, fn = isFunction) => {\r\n    return ((fn(element) && element()) || element)\r\n};\r\n\r\nexport default returnResultOfFunctionOrReturnElement;\r\n","\"use strict\";\r\n\r\nimport randomInteger from \"./src/random_integer_fn.js\";\r\nimport createArray from \"./src/createArray/createArray.js\";\r\nimport handleClick from \"./src/toggleHandleClick.js\";\r\nimport convertStringToArrayInteger from \"./src/convertStringToArrayInteger/convertStringToArrayInteger.js\";\r\n\r\nconst crazy_button = document.querySelector(\"button\");\r\nconst animationGoClassName = \"animationGo\";\r\nconst fnRandomInteger0_100 = randomInteger.bind(this, 0, 100);\r\nconst elementsOfBorderRadius = 8;\r\nconst defaultValueOfElementBorderRadius = 0;\r\n\r\nconst arrayDefaultBorderRadius = Array(elementsOfBorderRadius).fill(\r\n  defaultValueOfElementBorderRadius\r\n);\r\n\r\nconst fnCreateArrayRandomBorderRadius = createArray.bind(\r\n  this,\r\n  elementsOfBorderRadius,\r\n  fnRandomInteger0_100\r\n);\r\n\r\nconst fnToggleAnimation = handleClick.bind(\r\n  this,\r\n  crazy_button,\r\n  animationGoClassName\r\n);\r\n\r\nconst convertingValueBorderRadiusToArray = (\r\n  element,\r\n  array = arrayDefaultBorderRadius\r\n) => {\r\n  return element ? convertStringToArrayInteger(element) : array;\r\n};\r\n\r\nfunction sleep(ms) {\r\n  return new Promise((resolve) => setTimeout(resolve, ms));\r\n}\r\n\r\nasync function animationBorderRadius(\r\n  fnConvertToArray = convertingValueBorderRadiusToArray,\r\n  fnNewArray = fnCreateArrayRandomBorderRadius\r\n) {\r\n    const element = document.querySelector('button')\r\n    const oldValueBorderRadius = element.style.borderRadius;\r\n    const arrayOldValueBorderRadius = fnConvertToArray(oldValueBorderRadius);\r\n    const arrayNewValueBorderRadius = fnNewArray();\r\n    console.log(`Old border radius: ${oldValueBorderRadius}`);\r\n    console.log(arrayOldValueBorderRadius);\r\n    console.log(arrayNewValueBorderRadius)\r\n    async function planAnimation() {\r\n      let count = 0;\r\n      while (count < 8) {\r\n        count = 0;\r\n        for (let i = 0; i < arrayOldValueBorderRadius.length; i++) {\r\n          if (arrayOldValueBorderRadius[i] === arrayNewValueBorderRadius[i]) {\r\n            count++;\r\n            continue;\r\n          } else {\r\n            arrayOldValueBorderRadius[i] > arrayNewValueBorderRadius[i]\r\n              ? (arrayOldValueBorderRadius[i] -= 1)\r\n              : (arrayOldValueBorderRadius[i] += 1);\r\n          }\r\n          element.style.borderRadius = `${arrayOldValueBorderRadius[0]}% \r\n        ${arrayOldValueBorderRadius[1]}% \r\n        ${arrayOldValueBorderRadius[2]}%\r\n        ${arrayOldValueBorderRadius[3]}% / \r\n        ${arrayOldValueBorderRadius[4]}% \r\n        ${arrayOldValueBorderRadius[5]}% \r\n        ${arrayOldValueBorderRadius[6]}% \r\n        ${arrayOldValueBorderRadius[7]}%`;\r\n          await sleep(0);\r\n        }\r\n      }\r\n    }\r\n    // повторить с интервалом 2 секунды\r\n// let timerId = setInterval(() => alert('tick'), 2000);\r\n\r\n// остановить вывод через 5 секунд\r\n// setTimeout(() => { clearInterval(timerId); alert('stop'); }, 5000);\r\n    // let timer = setInterval(planAnimation,1000)\r\n    // planAnimation();\r\n    // console.log(\"HI\");\r\n    // console.log(self);\r\n    // console.log(event);\r\n    await sleep(10);\r\n    console.log(element)\r\n}\r\n\r\n\r\n\r\n\r\ncrazy_button.addEventListener(\"click\", fnToggleAnimation);\r\nlet interval = setInterval(animationBorderRadius,3000)\r\n\r\n// crazy_button.addEventListener(\"click\", testSetInterval);\r\n\r\n// crazy_button.addEventListener(\"click\",(e) => console.log(e.currentTarget))\r\n\r\nasync function comparison_of_values(el_1, el_2, button) {\r\n  button = document.querySelector(\"button\").style.borderRadius;\r\n  // el_2 = getArrayRandomBorderRadius();\r\n  el_2 = fnCreateArrayRandomBorderRadius();\r\n  const test_fun = () => {\r\n    return [...el_2].map((el) => (el += 3));\r\n  };\r\n  el_1 = (!!button && button) || test_fun();\r\n  if (typeof el_1 === \"string\") {\r\n    let new_string = el_1.replace(/[%/]/g, \"\");\r\n    new_string = new_string.replace(\"  \", \" \");\r\n    let new_values_array = new_string.split(\" \");\r\n    new_values_array = new_values_array.map((el) => (el = +el));\r\n\r\n    el_1 = new_values_array;\r\n  } else {\r\n  }\r\n  function sleep(ms) {\r\n    return new Promise((resolve) => setTimeout(resolve, ms));\r\n  }\r\n  async function FF() {\r\n    let count = 0;\r\n    while (count < 8) {\r\n      count = 0;\r\n      for (let i = 0; i < el_1.length; i++) {\r\n        if (el_1[i] === el_2[i]) {\r\n          console.log(\"Равны!!!\");\r\n          count++;\r\n          continue;\r\n        } else {\r\n          el_1[i] > el_2[i] ? (el_1[i] -= 1) : (el_1[i] += 1);\r\n        }\r\n        crazy_button.style.borderRadius = `${el_1[0]}% ${el_1[1]}% ${el_1[2]}% ${el_1[3]}% / ${el_1[4]}% ${el_1[5]}% ${el_1[6]}% ${el_1[7]}%`;\r\n        await sleep(0);\r\n      }\r\n    }\r\n  }\r\n  await FF();\r\n  await comparison_of_values();\r\n}\r\n\r\n// crazy_button.addEventListener(\"click\", comparison_of_values);\r\n","\"use strict\";\r\n\r\nimport returnResultOfFunctionOrReturnElement from \"./returnResultOfFunction.js\";\r\n\r\nconst createArray = (\r\n  countElementsInArray = 0,\r\n  element = undefined,\r\n  fn1 = returnResultOfFunctionOrReturnElement\r\n) => {\r\n  return [...new Array(countElementsInArray)].map(() => {\r\n    return fn1(fn1(element));\r\n  });\r\n};\r\n\r\n\r\n\r\nexport default createArray;\r\n","\"use strict\";\r\n\r\nconst handleClick = (element, className) => {\r\n  element.classList.toggle(className);\r\n};\r\n\r\nexport default handleClick;\r\n","\"use strict\";\r\n\r\nimport filterString from \"./filterString.js\"\r\nimport convertStringToArrayString from \"./convertStringToArrayString.js\"\r\nimport convertArrayStringToArrayInteger from \"./convertArrayStringToArrayInteger.js\"\r\n\r\nconst convertStringToArrayInteger = (string = \"\") => {\r\n  string = filterString(string);\r\n  const arrayInteger = convertArrayStringToArrayInteger(\r\n    convertStringToArrayString(string)\r\n  );\r\n  return arrayInteger;\r\n};\r\n\r\nexport default convertStringToArrayInteger;\r\n","\"use strict\";\r\n\r\nconst filterString = (string = \"\") => {\r\n  string = string.replace(/[%/]/g, \"\");\r\n  string = string.replace(\"  \", \" \");\r\n  return string;\r\n};\r\n\r\nexport default filterString;","\"use strict\";\r\n\r\nconst convertArrayStringToArrayInteger = (arrayString = []) => {\r\n  const arrayInteger = arrayString.map((el) => +el);\r\n  return arrayInteger;\r\n};\r\n\r\nexport default convertArrayStringToArrayInteger;\r\n","\"use strict\";\r\n\r\nconst convertStringToArrayString = (string = \"\") => {\r\n  const arrayString = string.split(\" \");\r\n  return arrayString;\r\n};\r\n\r\nexport default convertStringToArrayString;"],"names":["element","arguments","length","undefined","isFunction","crazy_button","document","querySelector","fnRandomInteger0_100","min","max","Math","floor","random","bind","arrayDefaultBorderRadius","Array","fill","fnCreateArrayRandomBorderRadius","fn1","returnResultOfFunctionOrReturnElement","map","fnToggleAnimation","handleClick","className","classList","toggle","convertingValueBorderRadiusToArray","array","string","replace","filterString","el","convertArrayStringToArrayInteger","split","convertStringToArrayString","convertStringToArrayInteger","addEventListener","setInterval","async","fnConvertToArray","fnNewArray","oldValueBorderRadius","style","borderRadius","arrayOldValueBorderRadius","arrayNewValueBorderRadius","ms","console","log","Promise","resolve","setTimeout"],"sourceRoot":""}