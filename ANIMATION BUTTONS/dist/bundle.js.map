{"version":3,"file":"bundle.js","mappings":"mBAEA,MCIA,EAJoBA,GACQ,mBAAZA,ECIhB,EAJ8C,SAACA,GAC3C,OADsDC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAGG,GAC7CJ,IAAYA,KAAcA,CAC1C,ECWA,EAZoB,WAIf,IAFHA,EAAOC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,QAAGE,EACVE,EAAGJ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAGK,EAEN,MAAO,IAAI,IAAIC,MAJKN,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,IAIqBO,KAAI,IACvCH,EAAIA,EAAIL,KAEnB,ECPMS,EAAeC,SAASC,cAAc,UACtCC,EJJgB,WAAsB,IAArBC,EAAGZ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAAGa,EAAGb,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EACpC,OAAOc,KAAKC,MAAOD,KAAKE,SAAWH,EAAOD,EAC5C,EIEyCK,UAAK,EAAM,EAAG,KAUjDC,GANiCC,EAAYF,UACjD,EAJ6B,EACW,GAQJE,EAAYF,UAChD,EAV6B,EAY7BN,IAyDFH,EAAaY,iBAAiB,SAzC9BC,eAAeC,EAAqBC,EAAMC,EAAMC,GAQ9C,GAPAA,EAAShB,SAASC,cAAc,UAAUgB,MAAMC,aAEhDH,EAAON,IAKa,iBADpBK,IAAUE,GAAUA,GAFX,IAAID,GAAMjB,KAAKqB,GAAQA,EAAM,KAGR,CAC5B,IAAIC,EAAaN,EAAKO,QAAQ,QAAS,IACvCD,EAAaA,EAAWC,QAAQ,KAAM,KACtC,IAAIC,EAAmBF,EAAWG,MAAM,KACxCD,EAAmBA,EAAiBxB,KAAKqB,IAAcA,IAEvDL,EAAOQ,CACT,CAEA,SAASE,EAAMC,GACb,OAAO,IAAIC,SAASC,GAAYC,WAAWD,EAASF,IACtD,OACAb,iBACE,IAAIiB,EAAQ,EACZ,KAAOA,EAAQ,GAAG,CAChBA,EAAQ,EACR,IAAK,IAAIC,EAAI,EAAGA,EAAIhB,EAAKtB,OAAQsC,IAC3BhB,EAAKgB,KAAOf,EAAKe,IAKnBhB,EAAKgB,GAAKf,EAAKe,GAAMhB,EAAKgB,IAAM,EAAMhB,EAAKgB,IAAM,EAEnD/B,EAAakB,MAAMC,aAAgB,GAAEJ,EAAK,OAAOA,EAAK,OAAOA,EAAK,OAAOA,EAAK,SAASA,EAAK,OAAOA,EAAK,OAAOA,EAAK,OAAOA,EAAK,YAC1HU,EAAM,KAPVO,QAAQC,IAAI,YACZH,IAQN,CACF,CACMI,SACApB,GACR,G","sources":["webpack://animation-buttons/./functions/random_integer_fn.js","webpack://animation-buttons/./functions/isFunction.js","webpack://animation-buttons/./functions/returnResultOfFunction.js","webpack://animation-buttons/./functions/createArray.js","webpack://animation-buttons/./main.js"],"sourcesContent":["\"use strict\";\r\n\r\nconst randomInteger = (min = 1, max = 1) => {\r\n  return Math.floor((Math.random() * max) + min);\r\n}\r\n\r\nexport default randomInteger;","\"use strict\";\r\n\r\nconst isFunction = (element) => {\r\n  return typeof element === \"function\";\r\n};\r\n\r\nexport default isFunction ;\r\n","\"use strict\";\r\nimport isFunction from \"./isFunction\";\r\n\r\nconst returnResultOfFunctionOrReturnElement = (element, fn = isFunction) => {\r\n    return ((fn(element) && element()) || element)\r\n};\r\n\r\nexport default returnResultOfFunctionOrReturnElement;\r\n","\"use strict\";\r\n\r\nimport returnResultOfFunctionOrReturnElement from \"./returnResultOfFunction.js\";\r\n\r\nconst createArray = (\r\n  countElementsInArray = 0,\r\n  element = undefined,\r\n  fn1 = returnResultOfFunctionOrReturnElement\r\n) => {\r\n  return [...new Array(countElementsInArray)].map(() => {\r\n    return fn1(fn1(element));\r\n  });\r\n};\r\n\r\n\r\n\r\nexport default createArray;\r\n","\"use strict\";\r\n\r\nimport randomInteger from \"./functions/random_integer_fn\";\r\nimport createArray from \"./functions/createArray.js\";\r\n\r\nconst crazy_button = document.querySelector(\"button\");\r\nconst randomInteger0_100 = randomInteger.bind(this, 0, 100);\r\nconst elementsOfBorderRadius = 8;\r\nconst defaultValueOfElementBorderRadius = 0\r\n\r\nconst createArrayDefaultBorderRadius = createArray.bind(\r\n  this,\r\n  elementsOfBorderRadius,\r\n  defaultValueOfElementBorderRadius\r\n);\r\n\r\nconst createArrayRandomBorderRadius = createArray.bind(\r\n  this,\r\n  elementsOfBorderRadius,\r\n  randomInteger0_100\r\n);\r\n\r\nconst getArrayRandomBorderRadius = (\r\n  countElements = 8,\r\n  fn = randomInteger0_100\r\n) => {\r\n  return [...new Array(countElements)].map(() => fn());\r\n};\r\n\r\nconst getArrayDefaultBorderRadius = (countElements = 8, element = 0) => {\r\n  return [...new Array(countElements)].map(() => element);\r\n};\r\n\r\nasync function animationBorderRadius(element, oldValueBorderRadius) {}\r\n\r\nasync function comparison_of_values(el_1, el_2, button) {\r\n  button = document.querySelector(\"button\").style.borderRadius;\r\n  // el_2 = getArrayRandomBorderRadius();\r\n  el_2 = createArrayRandomBorderRadius();\r\n  const test_fun = () => {\r\n    return [...el_2].map((el) => (el += 3));\r\n  };\r\n  el_1 = (!!button && button) || test_fun();\r\n  if (typeof el_1 === \"string\") {\r\n    let new_string = el_1.replace(/[%/]/g, \"\");\r\n    new_string = new_string.replace(\"  \", \" \");\r\n    let new_values_array = new_string.split(\" \");\r\n    new_values_array = new_values_array.map((el) => (el = +el));\r\n\r\n    el_1 = new_values_array;\r\n  } else {\r\n  }\r\n  function sleep(ms) {\r\n    return new Promise((resolve) => setTimeout(resolve, ms));\r\n  }\r\n  async function FF() {\r\n    let count = 0;\r\n    while (count < 8) {\r\n      count = 0;\r\n      for (let i = 0; i < el_1.length; i++) {\r\n        if (el_1[i] === el_2[i]) {\r\n          console.log(\"Равны!!!\");\r\n          count++;\r\n          continue;\r\n        } else {\r\n          el_1[i] > el_2[i] ? (el_1[i] -= 1) : (el_1[i] += 1);\r\n        }\r\n        crazy_button.style.borderRadius = `${el_1[0]}% ${el_1[1]}% ${el_1[2]}% ${el_1[3]}% / ${el_1[4]}% ${el_1[5]}% ${el_1[6]}% ${el_1[7]}%`;\r\n        await sleep(0);\r\n      }\r\n    }\r\n  }\r\n  await FF();\r\n  await comparison_of_values();\r\n}\r\n\r\ncrazy_button.addEventListener(\"click\", comparison_of_values);\r\n"],"names":["element","arguments","length","undefined","isFunction","fn1","returnResultOfFunctionOrReturnElement","Array","map","crazy_button","document","querySelector","randomInteger0_100","min","max","Math","floor","random","bind","createArrayRandomBorderRadius","createArray","addEventListener","async","comparison_of_values","el_1","el_2","button","style","borderRadius","el","new_string","replace","new_values_array","split","sleep","ms","Promise","resolve","setTimeout","count","i","console","log","FF"],"sourceRoot":""}