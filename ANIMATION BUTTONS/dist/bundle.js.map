{"version":3,"file":"bundle.js","mappings":"mBAEA,MCIA,EAJoBA,GACQ,mBAAZA,ECIhB,EAJ8C,SAACA,GAC3C,OADsDC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAGG,GAC7CJ,IAAYA,KAAcA,CAC1C,ECEMK,EAAeC,SAASC,cAAc,UAEtCC,EHPgB,WAAsB,IAArBC,EAAGR,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAAGS,EAAGT,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EACpC,OAAOU,KAAKC,MAAOD,KAAKE,SAAWH,EAAOD,EAC5C,EGK2CK,UAAK,EAAM,EAAG,KAIxBC,MAHF,GAGgCC,KAFrB,GCPtB,WAIf,IAFHhB,EAAOC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,QAAGE,EACVc,EAAGhB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAGiB,EAEN,MAAO,IAAI,IAAIH,MAJKd,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,IAIqBkB,KAAI,IACvCF,EAAIA,EAAIjB,KAEnB,EDKoDc,UAClD,EAR6B,EAU7BN,IElBkBY,CAACpB,EAASqB,KAC5BrB,EAAQsB,UAAUC,OAAOF,EAAU,GFoBCP,UACpC,EACAT,EAjB2B,eAkE7BmB,QAAQC,IAAI,M","sources":["webpack://animation-buttons/./src/random_integer_fn.js","webpack://animation-buttons/./src/createArray/isFunction.js","webpack://animation-buttons/./src/createArray/returnResultOfFunction.js","webpack://animation-buttons/./main.js","webpack://animation-buttons/./src/createArray/createArray.js","webpack://animation-buttons/./src/toggleHandleClick.js"],"sourcesContent":["\"use strict\";\r\n\r\nconst randomInteger = (min = 1, max = 1) => {\r\n  return Math.floor((Math.random() * max) + min);\r\n}\r\n\r\nexport default randomInteger;","\"use strict\";\r\n\r\nconst isFunction = (element) => {\r\n  return typeof element === \"function\";\r\n};\r\n\r\nexport default isFunction ;\r\n","\"use strict\";\r\nimport isFunction from \"./isFunction\";\r\n\r\nconst returnResultOfFunctionOrReturnElement = (element, fn = isFunction) => {\r\n    return ((fn(element) && element()) || element)\r\n};\r\n\r\nexport default returnResultOfFunctionOrReturnElement;\r\n","\"use strict\";\r\n\r\nimport randomInteger from \"./src/random_integer_fn.js\";\r\nimport createArray from \"./src/createArray/createArray.js\";\r\nimport handleClick from \"./src/toggleHandleClick.js\";\r\nimport convertStringToArrayInteger from \"./src/convertStringToArrayInteger/convertStringToArrayInteger.js\";\r\n\r\nconst crazy_button = document.querySelector(\"button\");\r\nconst animationGoClassName = \"animationGo\";\r\nconst fnRandomInteger0_100 = randomInteger.bind(this, 0, 100);\r\nconst elementsOfBorderRadius = 8;\r\nconst defaultValueOfElementBorderRadius = 0;\r\n\r\nconst arrayDefaultBorderRadius = Array(elementsOfBorderRadius).fill(\r\n  defaultValueOfElementBorderRadius\r\n);\r\n\r\nconst fnCreateArrayRandomBorderRadius = createArray.bind(\r\n  this,\r\n  elementsOfBorderRadius,\r\n  fnRandomInteger0_100\r\n);\r\n\r\nconst fnToggleAnimation = handleClick.bind(\r\n  this,\r\n  crazy_button,\r\n  animationGoClassName\r\n);\r\n\r\nconst convertingValueBorderRadiusToArray = (\r\n  element,\r\n  array = arrayDefaultBorderRadius\r\n) => {\r\n  return element ? convertStringToArrayInteger(element) : array;\r\n};\r\n\r\nfunction sleep(ms) {\r\n  return new Promise((resolve) => setTimeout(resolve, ms));\r\n}\r\n\r\nfunction animationBorderRadius(\r\n  fnConvertToArray = convertingValueBorderRadiusToArray,\r\n  fnNewArray = fnCreateArrayRandomBorderRadius\r\n) {\r\n  const element = document.querySelector(\"button\");\r\n  const oldValueBorderRadius = element.style.borderRadius;\r\n  const arrayOldValueBorderRadius = fnConvertToArray(oldValueBorderRadius);\r\n  const arrayNewValueBorderRadius = fnNewArray();\r\n  // async function planAnimation() {\r\n  let count = 0;\r\n  while (count < 8) {\r\n    count = 0;\r\n    for (let i = 0; i < arrayOldValueBorderRadius.length; i++) {\r\n      if (arrayOldValueBorderRadius[i] === arrayNewValueBorderRadius[i]) {\r\n        count++;\r\n        continue;\r\n      } else {\r\n        arrayOldValueBorderRadius[i] > arrayNewValueBorderRadius[i]\r\n          ? (arrayOldValueBorderRadius[i] -= 1)\r\n          : (arrayOldValueBorderRadius[i] += 1);\r\n      }\r\n      element.style.borderRadius = `${arrayOldValueBorderRadius[0]}% \r\n        ${arrayOldValueBorderRadius[1]}% \r\n        ${arrayOldValueBorderRadius[2]}%\r\n        ${arrayOldValueBorderRadius[3]}% / \r\n        ${arrayOldValueBorderRadius[4]}% \r\n        ${arrayOldValueBorderRadius[5]}% \r\n        ${arrayOldValueBorderRadius[6]}% \r\n        ${arrayOldValueBorderRadius[7]}%`;\r\n      // await sleep(0);\r\n    }\r\n  }\r\n}\r\n\r\nconsole.log(\"HI!\")\r\n\r\n","\"use strict\";\r\n\r\nimport returnResultOfFunctionOrReturnElement from \"./returnResultOfFunction.js\";\r\n\r\nconst createArray = (\r\n  countElementsInArray = 0,\r\n  element = undefined,\r\n  fn1 = returnResultOfFunctionOrReturnElement\r\n) => {\r\n  return [...new Array(countElementsInArray)].map(() => {\r\n    return fn1(fn1(element));\r\n  });\r\n};\r\n\r\n\r\n\r\nexport default createArray;\r\n","\"use strict\";\r\n\r\nconst handleClick = (element, className) => {\r\n  element.classList.toggle(className);\r\n};\r\n\r\nexport default handleClick;\r\n"],"names":["element","arguments","length","undefined","isFunction","crazy_button","document","querySelector","fnRandomInteger0_100","min","max","Math","floor","random","bind","Array","fill","fn1","returnResultOfFunctionOrReturnElement","map","handleClick","className","classList","toggle","console","log"],"sourceRoot":""}