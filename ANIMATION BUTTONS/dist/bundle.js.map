{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://animation-buttons/./src/random_integer_fn.js","webpack://animation-buttons/./src/createArray/isFunction.js","webpack://animation-buttons/./src/createArray/returnResultOfFunction.js","webpack://animation-buttons/./src/sleepAsyncFn.js","webpack://animation-buttons/./main.js","webpack://animation-buttons/./src/createArray/createArray.js","webpack://animation-buttons/./src/toggleHandleClick.js","webpack://animation-buttons/./src/convertStringToArrayInteger/convertStringToArrayInteger.js","webpack://animation-buttons/./src/convertStringToArrayInteger/filterString.js","webpack://animation-buttons/./src/convertStringToArrayInteger/convertArrayStringToArrayInteger.js","webpack://animation-buttons/./src/convertStringToArrayInteger/convertStringToArrayString.js"],"sourcesContent":["\"use strict\";\r\n\r\nconst randomInteger = (min = 1, max = 1) => {\r\n  return Math.floor((Math.random() * max) + min);\r\n}\r\n\r\nexport default randomInteger;","\"use strict\";\r\n\r\nconst isFunction = (element) => {\r\n  return typeof element === \"function\";\r\n};\r\n\r\nexport default isFunction ;\r\n","\"use strict\";\r\nimport isFunction from \"./isFunction\";\r\n\r\nconst returnResultOfFunctionOrReturnElement = (element, fn = isFunction) => {\r\n    return ((fn(element) && element()) || element)\r\n};\r\n\r\nexport default returnResultOfFunctionOrReturnElement;\r\n","\"use strict\";\r\n\r\nfunction sleep(ms) {\r\n    return new Promise((resolve) => setTimeout(resolve, ms));\r\n}\r\n\r\nexport default sleep;\r\n  \r\n","\"use strict\";\r\n\r\nimport randomInteger from \"./src/random_integer_fn.js\";\r\nimport createArray from \"./src/createArray/createArray.js\";\r\nimport handleClick from \"./src/toggleHandleClick.js\";\r\nimport convertStringToArrayInteger from \"./src/convertStringToArrayInteger/convertStringToArrayInteger.js\";\r\nimport sleep from \"./src/sleepAsyncFn.js\";\r\n\r\nconst crazy_button = document.querySelector(\"button\");\r\nconst animationGoClassName = \"animationGo\";\r\nconst fnRandomInteger0_100 = randomInteger.bind(this, 0, 100);\r\nconst elementsOfBorderRadius = 8;\r\nconst defaultValueOfElementBorderRadius = 0;\r\n\r\n\r\nconst arrayDefaultBorderRadius = Array(elementsOfBorderRadius).fill(\r\n  defaultValueOfElementBorderRadius\r\n);\r\n\r\nconst fnCreateArrayRandomBorderRadius = createArray.bind(\r\n  this,\r\n  elementsOfBorderRadius,\r\n  fnRandomInteger0_100\r\n);\r\n\r\nconst fnToggleAnimation = handleClick.bind(\r\n  this,\r\n  crazy_button,\r\n  animationGoClassName\r\n);\r\n\r\nconst convertingValueBorderRadiusToArray = (\r\n  element,\r\n  array = arrayDefaultBorderRadius\r\n) => {\r\n  return element ? convertStringToArrayInteger(element) : array;\r\n};\r\n\r\nasync function animationBorderRadius(\r\n  _event,\r\n  fnConvertToArray = convertingValueBorderRadiusToArray,\r\n  fnNewArray = fnCreateArrayRandomBorderRadius\r\n) {\r\n  const self = document.querySelector('button')\r\n  const oldValueBorderRadius = self.style.borderRadius;\r\n  const arrayOldValueBorderRadius = fnConvertToArray(oldValueBorderRadius);\r\n  const arrayNewValueBorderRadius = fnNewArray();\r\n async function planAnimation() {\r\n    console.log('Test fn planAnimation')\r\n    let count = 0;\r\n    while (count < 8) {\r\n      count = 0;\r\n      for (let i = 0; i < arrayOldValueBorderRadius.length; i++) {\r\n        console.log('for: !!!')\r\n        if (\r\n          arrayOldValueBorderRadius.length !== arrayNewValueBorderRadius.length\r\n        ) {\r\n          console.log(\"array1 !== array2\");\r\n          console.log(arrayOldValueBorderRadius);\r\n          console.log(arrayNewValueBorderRadius);\r\n        }\r\n        if (arrayOldValueBorderRadius[i] === arrayNewValueBorderRadius[i]) {\r\n          count++;\r\n          continue;\r\n        } else {\r\n          arrayOldValueBorderRadius[i] > arrayNewValueBorderRadius[i]\r\n            ? (arrayOldValueBorderRadius[i] -= 1)\r\n            : (arrayOldValueBorderRadius[i] += 1);\r\n        }\r\n        self.style.borderRadius = `${arrayOldValueBorderRadius[0]}% \r\n        ${arrayOldValueBorderRadius[1]}% \r\n        ${arrayOldValueBorderRadius[2]}%\r\n        ${arrayOldValueBorderRadius[3]}% / \r\n        ${arrayOldValueBorderRadius[4]}% \r\n        ${arrayOldValueBorderRadius[5]}% \r\n        ${arrayOldValueBorderRadius[6]}% \r\n        ${arrayOldValueBorderRadius[7]}%`;\r\n        await sleep(10)\r\n      }\r\n    }\r\n  }\r\n  await planAnimation()\r\n  await animationBorderRadius()\r\n}\r\n\r\ncrazy_button.addEventListener(\"click\", animationBorderRadius);\r\n\r\nconsole.log(\"HI!\");\r\n","\"use strict\";\r\n\r\nimport returnResultOfFunctionOrReturnElement from \"./returnResultOfFunction.js\";\r\n\r\nconst createArray = (\r\n  countElementsInArray = 0,\r\n  element = undefined,\r\n  fn1 = returnResultOfFunctionOrReturnElement\r\n) => {\r\n  return [...new Array(countElementsInArray)].map(() => {\r\n    return fn1(fn1(element));\r\n  });\r\n};\r\n\r\n\r\n\r\nexport default createArray;\r\n","\"use strict\";\r\n\r\nconst handleClick = (element, className) => {\r\n  element.classList.toggle(className);\r\n};\r\n\r\nexport default handleClick;\r\n","\"use strict\";\r\n\r\nimport filterString from \"./filterString.js\"\r\nimport convertStringToArrayString from \"./convertStringToArrayString.js\"\r\nimport convertArrayStringToArrayInteger from \"./convertArrayStringToArrayInteger.js\"\r\n\r\nconst convertStringToArrayInteger = (string = \"\") => {\r\n  string = filterString(string);\r\n  const arrayInteger = convertArrayStringToArrayInteger(\r\n    convertStringToArrayString(string)\r\n  );\r\n  return arrayInteger;\r\n};\r\n\r\nexport default convertStringToArrayInteger;\r\n","\"use strict\";\r\n\r\nconst filterString = (string = \"\") => {\r\n  string = string.replace(/[%/]/g, \"\");\r\n  string = string.replace(\"  \", \" \");\r\n  return string;\r\n};\r\n\r\nexport default filterString;","\"use strict\";\r\n\r\nconst convertArrayStringToArrayInteger = (arrayString = []) => {\r\n  const arrayInteger = arrayString.map((el) => +el);\r\n  return arrayInteger;\r\n};\r\n\r\nexport default convertArrayStringToArrayInteger;\r\n","\"use strict\";\r\n\r\nconst convertStringToArrayString = (string = \"\") => {\r\n  const arrayString = string.split(\" \");\r\n  return arrayString;\r\n};\r\n\r\nexport default convertStringToArrayString;"],"names":["element","arguments","length","undefined","isFunction","ms","Promise","resolve","setTimeout","crazy_button","document","querySelector","fnRandomInteger0_100","min","max","Math","floor","random","bind","arrayDefaultBorderRadius","Array","fill","fnCreateArrayRandomBorderRadius","fn1","returnResultOfFunctionOrReturnElement","map","convertingValueBorderRadiusToArray","handleClick","className","classList","toggle","array","string","replace","filterString","el","convertArrayStringToArrayInteger","split","convertStringToArrayString","convertStringToArrayInteger","addEventListener","async","animationBorderRadius","_event","fnConvertToArray","fnNewArray","self","arrayOldValueBorderRadius","style","borderRadius","arrayNewValueBorderRadius","console","log","count","i","sleep","planAnimation"],"sourceRoot":""}