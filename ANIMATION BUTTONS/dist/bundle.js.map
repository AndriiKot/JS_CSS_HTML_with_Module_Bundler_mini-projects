{"version":3,"file":"bundle.js","mappings":"mBAEA,MCIA,EAJoBA,GACQ,mBAAZA,ECIhB,EAJ8C,SAACA,GAC3C,OADsDC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAGG,GAC7CJ,IAAYA,KAAcA,CAC1C,ECCMK,EAAeC,SAASC,cAAc,UACtCC,EAAuB,cACvBC,EHNgB,WAAsB,IAArBC,EAAGT,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAAGU,EAAGV,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EACpC,OAAOW,KAAKC,MAAOD,KAAKE,SAAWH,EAAOD,EAC5C,EGI2CK,UAAK,EAAM,EAAG,KAInDC,EAA2BC,MAHF,GAGgCC,KAFrB,GAI1CC,QAAQC,IAAIJ,GCVQ,WAIf,IAFHhB,EAAOC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,QAAGE,EACVkB,EAAGpB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAGqB,EAEN,MAAO,IAAI,IAAIL,MAJKhB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,IAIqBsB,KAAI,IACvCF,EAAIA,EAAIrB,KAEnB,EDIoDe,UAClD,EAR6B,EAU7BN,GAHF,MAMMe,GEpBcC,CAACzB,EAAS0B,KAC5B1B,EAAQ2B,UAAUC,OAAOF,EAAU,GFmBCX,UACpC,EACAV,EACAG,GASFH,EAAawB,iBAAiB,QAASL,GACvCnB,EAAawB,iBAAiB,SAN9BC,eAAqCC,EAAM/B,EAASgC,GACrCD,EAAME,cACdN,UAAUO,SAAS1B,GAAwBW,QAAQC,IAAI,MAAQD,QAAQC,IAAI,MAClF,G","sources":["webpack://animation-buttons/./src/random_integer_fn.js","webpack://animation-buttons/./src/createArray/isFunction.js","webpack://animation-buttons/./src/createArray/returnResultOfFunction.js","webpack://animation-buttons/./main.js","webpack://animation-buttons/./src/createArray/createArray.js","webpack://animation-buttons/./src/toggleAnimation.js"],"sourcesContent":["\"use strict\";\r\n\r\nconst randomInteger = (min = 1, max = 1) => {\r\n  return Math.floor((Math.random() * max) + min);\r\n}\r\n\r\nexport default randomInteger;","\"use strict\";\r\n\r\nconst isFunction = (element) => {\r\n  return typeof element === \"function\";\r\n};\r\n\r\nexport default isFunction ;\r\n","\"use strict\";\r\nimport isFunction from \"./isFunction\";\r\n\r\nconst returnResultOfFunctionOrReturnElement = (element, fn = isFunction) => {\r\n    return ((fn(element) && element()) || element)\r\n};\r\n\r\nexport default returnResultOfFunctionOrReturnElement;\r\n","\"use strict\";\r\n\r\nimport randomInteger from \"./src/random_integer_fn.js\";\r\nimport createArray from \"./src/createArray/createArray.js\";\r\nimport handleClick from \"./src/toggleAnimation.js\";\r\n\r\nconst crazy_button = document.querySelector(\"button\");\r\nconst animationGoClassName = \"animationGo\";\r\nconst fnRandomInteger0_100 = randomInteger.bind(this, 0, 100);\r\nconst elementsOfBorderRadius = 8;\r\nconst defaultValueOfElementBorderRadius = 0;\r\n\r\nconst arrayDefaultBorderRadius = Array(elementsOfBorderRadius).fill(defaultValueOfElementBorderRadius)\r\n\r\nconsole.log(arrayDefaultBorderRadius)\r\n\r\nconst fnCreateArrayRandomBorderRadius = createArray.bind(\r\n  this,\r\n  elementsOfBorderRadius,\r\n  fnRandomInteger0_100\r\n);\r\n\r\nconst fnToggleAnimation = handleClick.bind(\r\n  this,\r\n  crazy_button,\r\n  animationGoClassName\r\n);\r\n\r\n\r\nasync function animationBorderRadius(event,element, oldValueBorderRadius) {\r\n  const self = event.currentTarget;\r\n  self.classList.contains(animationGoClassName) ? console.log('ON') : console.log('OFF')\r\n}\r\n\r\ncrazy_button.addEventListener(\"click\", fnToggleAnimation);\r\ncrazy_button.addEventListener(\"click\", animationBorderRadius);\r\n\r\nconst getArrayRandomBorderRadius = (\r\n  countElements = 8,\r\n  fn = fnRandomInteger0_100\r\n) => {\r\n  return [...new Array(countElements)].map(() => fn());\r\n};\r\n\r\nconst getArrayDefaultBorderRadius = (countElements = 8, element = 0) => {\r\n  return [...new Array(countElements)].fill(element);\r\n};\r\n\r\nasync function comparison_of_values(el_1, el_2, button) {\r\n  button = document.querySelector(\"button\").style.borderRadius;\r\n  // el_2 = getArrayRandomBorderRadius();\r\n  el_2 = fnCreateArrayRandomBorderRadius();\r\n  const test_fun = () => {\r\n    return [...el_2].map((el) => (el += 3));\r\n  };\r\n  el_1 = (!!button && button) || test_fun();\r\n  if (typeof el_1 === \"string\") {\r\n    let new_string = el_1.replace(/[%/]/g, \"\");\r\n    new_string = new_string.replace(\"  \", \" \");\r\n    let new_values_array = new_string.split(\" \");\r\n    new_values_array = new_values_array.map((el) => (el = +el));\r\n\r\n    el_1 = new_values_array;\r\n  } else {\r\n  }\r\n  function sleep(ms) {\r\n    return new Promise((resolve) => setTimeout(resolve, ms));\r\n  }\r\n  async function FF() {\r\n    let count = 0;\r\n    while (count < 8) {\r\n      count = 0;\r\n      for (let i = 0; i < el_1.length; i++) {\r\n        if (el_1[i] === el_2[i]) {\r\n          console.log(\"Равны!!!\");\r\n          count++;\r\n          continue;\r\n        } else {\r\n          el_1[i] > el_2[i] ? (el_1[i] -= 1) : (el_1[i] += 1);\r\n        }\r\n        crazy_button.style.borderRadius = `${el_1[0]}% ${el_1[1]}% ${el_1[2]}% ${el_1[3]}% / ${el_1[4]}% ${el_1[5]}% ${el_1[6]}% ${el_1[7]}%`;\r\n        await sleep(0);\r\n      }\r\n    }\r\n  }\r\n  await FF();\r\n  await comparison_of_values();\r\n}\r\n\r\n// crazy_button.addEventListener(\"click\", comparison_of_values);\r\n","\"use strict\";\r\n\r\nimport returnResultOfFunctionOrReturnElement from \"./returnResultOfFunction.js\";\r\n\r\nconst createArray = (\r\n  countElementsInArray = 0,\r\n  element = undefined,\r\n  fn1 = returnResultOfFunctionOrReturnElement\r\n) => {\r\n  return [...new Array(countElementsInArray)].map(() => {\r\n    return fn1(fn1(element));\r\n  });\r\n};\r\n\r\n\r\n\r\nexport default createArray;\r\n","\"use strict\";\r\n\r\nconst handleClick = (element, className) => {\r\n  element.classList.toggle(className);\r\n};\r\n\r\nexport default handleClick;\r\n"],"names":["element","arguments","length","undefined","isFunction","crazy_button","document","querySelector","animationGoClassName","fnRandomInteger0_100","min","max","Math","floor","random","bind","arrayDefaultBorderRadius","Array","fill","console","log","fn1","returnResultOfFunctionOrReturnElement","map","fnToggleAnimation","handleClick","className","classList","toggle","addEventListener","async","event","oldValueBorderRadius","currentTarget","contains"],"sourceRoot":""}